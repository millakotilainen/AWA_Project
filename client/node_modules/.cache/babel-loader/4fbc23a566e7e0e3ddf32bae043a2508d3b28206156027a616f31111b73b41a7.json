{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Milla\\\\Documents\\\\Advanced Web Applications\\\\Project\\\\client\\\\src\\\\Pages\\\\Thread\\\\Show\\\\ShowThread.js\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useParams, useHistory, Link } from 'react-router-dom';\nimport HttpClient from \"../../../Services/HttpClient\";\nimport AppContext from \"../../../Contexts/AppContext\";\nimport Button from \"../../../Components/Button/Button\";\nimport { List, ListItem, ListItemText } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function () {\n  const history = useHistory();\n  const {\n    user\n  } = useContext(AppContext);\n  const {\n    id\n  } = useParams();\n  const [thread, setThread] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(false);\n  useEffect(() => {\n    setThread(null);\n    setComments([]);\n    getThread();\n  }, [id]);\n  const getThread = async () => {\n    const {\n      data\n    } = await HttpClient().get('/api/thread/' + id);\n    setThread(data);\n    getComments();\n  };\n  const getComments = async () => {\n    const {\n      data\n    } = await HttpClient().get('/api/comment/thread/' + id);\n    if (data.data.length) {\n      setComments(data);\n      setPage(page + 1);\n      setHasMore(true);\n    } else {\n      setHasMore(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [thread && /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"page__title\",\n      children: thread.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 24\n    }, this), thread && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"page__author\",\n      children: [\"Thread by: \", thread.author && thread.author.name || \"No name\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 24\n    }, this), thread && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"page__description\",\n      children: thread.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 24\n    }, this), user && /*#__PURE__*/_jsxDEV(Button, {\n      className: \"mb-1\",\n      onClick: () => history.push(`/comment/create/${id}`),\n      children: \"Post Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: comment.comment,\n          secondary: comment.createdAt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      disapled: !hasMore,\n      onClick: () => getComments(),\n      children: \"Load more comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"names":["React","useContext","useEffect","useState","useParams","useHistory","Link","HttpClient","AppContext","Button","List","ListItem","ListItemText","jsxDEV","_jsxDEV","history","user","id","thread","setThread","comments","setComments","page","setPage","hasMore","setHasMore","getThread","data","get","getComments","length","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","author","name","description","onClick","push","map","comment","index","primary","secondary","createdAt","disapled"],"sources":["C:/Users/Milla/Documents/Advanced Web Applications/Project/client/src/Pages/Thread/Show/ShowThread.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport {useParams, useHistory, Link} from 'react-router-dom';\r\nimport HttpClient from \"../../../Services/HttpClient\";\r\nimport AppContext from \"../../../Contexts/AppContext\";\r\nimport Button from \"../../../Components/Button/Button\";\r\nimport { List, ListItem, ListItemText } from '@material-ui/core';\r\n \r\n\r\nexport default function(){\r\n    const history = useHistory();\r\n    const {user} = useContext(AppContext);\r\n    const {id} = useParams();\r\n    const [thread, setThread] = useState(null);\r\n    const [comments, setComments] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [hasMore, setHasMore] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setThread(null);\r\n        setComments([]);\r\n        getThread();\r\n    }, [id]);\r\n\r\n    const getThread = async () => {\r\n        const {data} = await HttpClient().get('/api/thread/'+id);\r\n        setThread(data);\r\n        getComments();\r\n    }\r\n\r\n    const getComments = async () => {\r\n        const {data} = await HttpClient().get('/api/comment/thread/'+id);\r\n        if(data.data.length){\r\n            setComments(data);\r\n            setPage(page + 1);\r\n            setHasMore(true);\r\n        } else {\r\n            setHasMore(false);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <div className=\"page\">\r\n            {thread && <h1 className=\"page__title\">{thread.title}</h1>}\r\n            {thread && <p className=\"page__author\">Thread by: {(thread.author && thread.author.name) || \"No name\"}</p>}\r\n            {thread && <p className=\"page__description\">{thread.description}</p>}\r\n\r\n            {user && <Button className=\"mb-1\" onClick={() => history.push(`/comment/create/${id}`)}>Post Comment</Button>}\r\n            <List>\r\n                {comments.map((comment, index) => (\r\n                    <ListItem key={index}>\r\n                        <ListItemText primary={comment.comment} secondary={comment.createdAt}/>\r\n                    </ListItem>\r\n                    \r\n                ))}\r\n            </List>\r\n\r\n            <Button disapled={!hasMore} onClick={() => getComments()}>Load more comments</Button>\r\n            \r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}