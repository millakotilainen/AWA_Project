{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Milla\\\\Documents\\\\Advanced Web Applications\\\\Project\\\\client\\\\src\\\\Pages\\\\Thread\\\\Show\\\\ShowThread.js\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useParams, useHistory, Link } from 'react-router-dom';\nimport HttpClient from \"../../../Services/HttpClient\";\nimport AppContext from \"../../../Contexts/AppContext\";\nimport Button from \"../../../Components/Button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function () {\n  const history = useHistory();\n  const {\n    user\n  } = useContext(AppContext);\n  const {\n    id\n  } = useParams();\n  const [thread, setThread] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [authorName, setAuthorName] = useState(null);\n  useEffect(() => {\n    setThread(null);\n    setComments([]);\n    getThread();\n  }, [id]);\n  const getThread = async () => {\n    const {\n      data\n    } = await HttpClient().get('/api/thread/' + id);\n    setThread(data);\n    getComments();\n  };\n  const getComments = async () => {\n    const {\n      data\n    } = await HttpClient().get('/api/comment?threadId=' + id);\n    setComments(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [thread && /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"page__title\",\n      children: thread.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 24\n    }, this), thread && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"page__description\",\n      children: thread.author && thread.author.name || 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 24\n    }, this), thread && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"page__description\",\n      children: thread.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 24\n    }, this), user && /*#__PURE__*/_jsxDEV(Button, {\n      className: \"mb-1\",\n      onClick: () => history.push(`/comment/create/${id}`),\n      children: \"Post Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list__item\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/thread/${thread._id}`,\n          className: \"list__link\",\n          children: comment.comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"names":["React","useContext","useEffect","useState","useParams","useHistory","Link","HttpClient","AppContext","Button","jsxDEV","_jsxDEV","history","user","id","thread","setThread","comments","setComments","authorName","setAuthorName","getThread","data","get","getComments","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","author","name","description","onClick","push","map","comment","index","to","_id"],"sources":["C:/Users/Milla/Documents/Advanced Web Applications/Project/client/src/Pages/Thread/Show/ShowThread.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport {useParams, useHistory, Link} from 'react-router-dom';\r\nimport HttpClient from \"../../../Services/HttpClient\";\r\nimport AppContext from \"../../../Contexts/AppContext\";\r\nimport Button from \"../../../Components/Button/Button\";\r\n \r\n\r\nexport default function(){\r\n    const history = useHistory();\r\n    const {user} = useContext(AppContext);\r\n    const {id} = useParams();\r\n    const [thread, setThread] = useState(null);\r\n    const [comments, setComments] = useState([]);\r\n    const [authorName, setAuthorName] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setThread(null);\r\n        setComments([]);\r\n        getThread();\r\n    }, [id]);\r\n\r\n    const getThread = async () => {\r\n        const {data} = await HttpClient().get('/api/thread/'+id);\r\n        setThread(data);\r\n        getComments();\r\n    }\r\n\r\n    const getComments = async () => {\r\n        const {data} = await HttpClient().get('/api/comment?threadId='+id);\r\n        setComments(data);\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <div className=\"page\">\r\n            {thread && <h1 className=\"page__title\">{thread.title}</h1>}\r\n            {thread && <p className=\"page__description\">{(thread.author && thread.author.name) || 0}</p>}\r\n            {thread && <p className=\"page__description\">{thread.description}</p>}\r\n\r\n            {user && <Button className=\"mb-1\" onClick={() => history.push(`/comment/create/${id}`)}>Post Comment</Button>}\r\n\r\n            <div className=\"list\">\r\n                {comments.map((comment, index) => (\r\n                    <div className=\"list__item\" key={index}>\r\n                        <Link to={`/thread/${thread._id}`} className=\"list__link\">{comment.comment}</Link>\r\n                    </div>\r\n                    \r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}