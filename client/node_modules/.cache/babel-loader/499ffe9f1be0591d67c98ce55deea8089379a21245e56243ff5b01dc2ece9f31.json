{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Milla\\\\Documents\\\\Advanced Web Applications\\\\Project\\\\client\\\\src\\\\Components\\\\FormErrors\\\\FormErrors.js\";\nimport React from \"react\";\nimport \"./FormErrors.css\";\n\n// errors: An array of error messages to be displayed in the form\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ({\n  errors\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-errors\",\n    children: errors.length > 1 ?\n    /*#__PURE__*/\n    // If there are more than one errors, render them as list\n    _jsxDEV(\"ul\", {\n      children: errors.map((error, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }, this) :\n    /*#__PURE__*/\n    // If there is only one error, render it as a single span element\n    _jsxDEV(\"span\", {\n      children: errors[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","errors","className","children","length","map","error","index","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Milla/Documents/Advanced Web Applications/Project/client/src/Components/FormErrors/FormErrors.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./FormErrors.css\";\r\n\r\n// errors: An array of error messages to be displayed in the form\r\nexport default function ({errors}){\r\n    return (\r\n        <div className=\"form-errors\">\r\n            {errors.length > 1 ? (\r\n                // If there are more than one errors, render them as list\r\n                <ul>\r\n                    {errors.map((error, index) => (\r\n                        <li>{error}</li>\r\n                    ))}\r\n                </ul>\r\n            ): (\r\n                // If there is only one error, render it as a single span element\r\n                <span>{errors[0]}</span>\r\n            )}\r\n        </div>\r\n    )\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,kBAAkB;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,eAAe,UAAU;EAACC;AAAM,CAAC,EAAC;EAC9B,oBACID,OAAA;IAAKE,SAAS,EAAC,aAAa;IAAAC,QAAA,EACvBF,MAAM,CAACG,MAAM,GAAG,CAAC;IAAA;IACd;IACAJ,OAAA;MAAAG,QAAA,EACKF,MAAM,CAACI,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACrBP,OAAA;QAAAG,QAAA,EAAKG;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAClB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;IAAA;IAEL;IACAX,OAAA;MAAAG,QAAA,EAAOF,MAAM,CAAC,CAAC;IAAC;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO;EAC1B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd"},"metadata":{},"sourceType":"module","externalDependencies":[]}