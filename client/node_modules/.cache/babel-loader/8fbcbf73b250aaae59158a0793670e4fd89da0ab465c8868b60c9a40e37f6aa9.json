{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Milla\\\\Documents\\\\Advanced Web Applications\\\\Project\\\\client\\\\src\\\\Pages\\\\Thread\\\\Show\\\\ShowThread.js\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useParams, useHistory, Link } from 'react-router-dom';\nimport HttpClient from \"../../../Services/HttpClient\";\nimport AppContext from \"../../../Contexts/AppContext\";\n//import Button from \"../../../Components/Button/Button\";\nimport { List, ListItem, ListItemText, TextField } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function () {\n  const history = useHistory();\n  const {\n    user\n  } = useContext(AppContext);\n  const {\n    id\n  } = useParams();\n  const [thread, setThread] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(false);\n  const [isReplying, setIsReplying] = useState(false);\n  const [replyContent, setReplyContent] = useState(\"\");\n  useEffect(() => {\n    setThread(null);\n    //setComments([]);\n    getThread();\n    getCommentsFromLocalStorage();\n  }, [id]);\n  const getThread = async () => {\n    const {\n      data\n    } = await HttpClient().get('/api/thread/' + id);\n    setThread(data);\n    getComments();\n  };\n  const getComments = async () => {\n    const {\n      data\n    } = await HttpClient().get('/api/comment/thread/' + id);\n    if (data.data.length) {\n      //setComments(data);\n      setComments([...comments, ...data.data]);\n      setPage(page + 1);\n      setHasMore(true);\n    } else {\n      setHasMore(false);\n    }\n  };\n  const getCommentsFromLocalStorage = () => {\n    const storedComments = localStorage.getItem('comments');\n    if (storedComments) {\n      setComments(JSON.parse(storedComments));\n    }\n  };\n  const handleReply = async event => {\n    event.preventDefault();\n    if (!replyContent) return;\n    const data = {\n      author: user._id,\n      threadId: thread._id,\n      comment: replyContent\n    };\n    const response = await HttpClient().post(\"/api/comment/create\", data);\n    //setComments([...comments, response.data]);\n    const updatedComments = [...comments, response.data];\n    setComments(updatedComments);\n    saveCommentsToLocalStorage(updatedComments);\n  };\n  const saveCommentsToLocalStorage = comments => {\n    localStorage.setItem('comments', JSON.stringify(comments));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [thread && /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"page__title\",\n      children: thread.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 24\n    }, this), thread && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"page__author\",\n      children: [\"Thread by: \", thread.author && thread.author.name || \"No name\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 24\n    }, this), thread && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"page__description\",\n      children: thread.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: comment.comment,\n          secondary: comment.createdAt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      disabled: !hasMore,\n      onClick: getComments,\n      children: \"Load more comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), user && /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => setIsReplying(true),\n      children: \"Reply\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 22\n    }, this), isReplying && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleReply,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Content\",\n        value: replyContent,\n        onChange: e => setReplyContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Reply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"names":["React","useContext","useEffect","useState","useParams","useHistory","Link","HttpClient","AppContext","List","ListItem","ListItemText","TextField","Button","jsxDEV","_jsxDEV","history","user","id","thread","setThread","comments","setComments","page","setPage","hasMore","setHasMore","isReplying","setIsReplying","replyContent","setReplyContent","getThread","getCommentsFromLocalStorage","data","get","getComments","length","storedComments","localStorage","getItem","JSON","parse","handleReply","event","preventDefault","author","_id","threadId","comment","response","post","updatedComments","saveCommentsToLocalStorage","setItem","stringify","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","name","description","map","index","primary","secondary","createdAt","variant","color","disabled","onClick","onSubmit","fullWidth","label","value","onChange","e","target","type"],"sources":["C:/Users/Milla/Documents/Advanced Web Applications/Project/client/src/Pages/Thread/Show/ShowThread.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport {useParams, useHistory, Link} from 'react-router-dom';\r\nimport HttpClient from \"../../../Services/HttpClient\";\r\nimport AppContext from \"../../../Contexts/AppContext\";\r\n//import Button from \"../../../Components/Button/Button\";\r\nimport { List, ListItem, ListItemText, TextField } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\n \r\n\r\nexport default function(){\r\n    const history = useHistory();\r\n    const {user} = useContext(AppContext);\r\n    const {id} = useParams();\r\n    const [thread, setThread] = useState(null);\r\n    const [comments, setComments] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [hasMore, setHasMore] = useState(false);\r\n    const [isReplying, setIsReplying] = useState(false);\r\n    const [replyContent, setReplyContent] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setThread(null);\r\n        //setComments([]);\r\n        getThread();\r\n        getCommentsFromLocalStorage();\r\n    }, [id]);\r\n\r\n    const getThread = async () => {\r\n        const {data} = await HttpClient().get('/api/thread/'+id);\r\n        setThread(data);\r\n        getComments();\r\n    }\r\n\r\n    const getComments = async () => {\r\n        const {data} = await HttpClient().get('/api/comment/thread/'+id);\r\n        if(data.data.length){\r\n            //setComments(data);\r\n            setComments([...comments, ...data.data]);\r\n            setPage(page + 1);\r\n            setHasMore(true);\r\n        } else {\r\n            setHasMore(false);\r\n        }\r\n    }\r\n\r\n    const getCommentsFromLocalStorage = () => {\r\n        const storedComments = localStorage.getItem('comments');\r\n        if (storedComments) {\r\n          setComments(JSON.parse(storedComments));\r\n        }\r\n    };\r\n\r\n    const handleReply = async event => {\r\n        event.preventDefault();\r\n\r\n        if(!replyContent) return;\r\n        const data = {\r\n            author: user._id,\r\n            threadId: thread._id,\r\n            comment: replyContent,\r\n        };\r\n\r\n        const response = await HttpClient().post(\"/api/comment/create\", data);\r\n        //setComments([...comments, response.data]);\r\n        const updatedComments = [...comments, response.data];\r\n        setComments(updatedComments);\r\n        saveCommentsToLocalStorage(updatedComments);\r\n\r\n    };\r\n\r\n    const saveCommentsToLocalStorage = (comments) => {\r\n        localStorage.setItem('comments', JSON.stringify(comments));\r\n    };\r\n    \r\n    \r\n\r\n    return(\r\n        <div className=\"page\">\r\n            {thread && <h1 className=\"page__title\">{thread.title}</h1>}\r\n            {thread && <p className=\"page__author\">Thread by: {(thread.author && thread.author.name) || \"No name\"}</p>}\r\n            {thread && <p className=\"page__description\">{thread.description}</p>}\r\n\r\n            <List>\r\n                {comments.map((comment, index) => (\r\n                    <ListItem key={index}>\r\n                        <ListItemText primary={comment.comment} secondary={comment.createdAt}/>\r\n                    </ListItem>\r\n                    \r\n                ))}\r\n            </List>\r\n\r\n            <Button variant=\"contained\" color=\"primary\" disabled={!hasMore} onClick={getComments}>Load more comments</Button>\r\n            {user && <Button variant=\"contained\" color=\"primary\" onClick={() => setIsReplying(true)}>Reply</Button>}\r\n            {isReplying && (\r\n                <form onSubmit={handleReply}>\r\n                    <TextField fullWidth label=\"Content\" value={replyContent} onChange={e => setReplyContent(e.target.value)}/>\r\n                    <Button type=\"submit\">Reply</Button>\r\n                </form>\r\n            )}\r\n            \r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}