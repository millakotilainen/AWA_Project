{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Milla\\\\Documents\\\\Advanced Web Applications\\\\Project\\\\client\\\\src\\\\Pages\\\\Home\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport HttpClient from \"../../Services/HttpClient\";\nimport Button from \"../../Components/Button/Button\";\nimport { Link, useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const history = useHistory();\n  const [threads, setThreads] = useState([]);\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(false);\n  useEffect(() => {\n    getThreads();\n  }, []);\n  const getThreads = async pageNumber => {\n    try {\n      const {\n        data\n      } = await HttpClient().get('/api/thread', {\n        params: {\n          page: pageNumber\n        }\n      });\n      if (data && data.length) {\n        setThreads(data);\n        setPage(page + 1);\n        setHasMore(true);\n      } else {\n        setHasMore(false);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"home\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"page__title\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"mb-1\",\n        onClick: () => history.push('/thread/create'),\n        children: \"Create a thread\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list\",\n        children: threads.map((thread, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list__item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/thread/${thread._id}`,\n            className: \"list__link\",\n            children: [\" \", thread.title, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        disabled: !hasMore,\n        onClick: handleLoadMoreComments,\n        children: \"Load more threads\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Home, \"ao6HnAd0df9TFruv+btyI7YIk/g=\", false, function () {\n  return [useHistory];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","HttpClient","Button","Link","useHistory","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","history","threads","setThreads","page","setPage","hasMore","setHasMore","getThreads","pageNumber","data","get","params","length","error","console","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","push","map","thread","index","to","_id","title","variant","color","disabled","handleLoadMoreComments","_c","$RefreshReg$"],"sources":["C:/Users/Milla/Documents/Advanced Web Applications/Project/client/src/Pages/Home/Home.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport HttpClient from \"../../Services/HttpClient\";\r\nimport Button from \"../../Components/Button/Button\";\r\nimport {Link, useHistory} from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n    const history = useHistory();\r\n    const [threads, setThreads] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [hasMore, setHasMore] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getThreads();\r\n    }, []);\r\n\r\n    const  getThreads = async (pageNumber) => {\r\n        try{\r\n            const {data} = await HttpClient().get('/api/thread', {\r\n                params: { page: pageNumber },\r\n                });\r\n            if (data && data.length) {\r\n                setThreads(data);\r\n                setPage(page + 1);\r\n                setHasMore(true);\r\n            } else {\r\n                setHasMore(false);\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <main className='home'>\r\n                <h1 className=\"page__title\">Home</h1>\r\n                \r\n                <Button className='mb-1' onClick={() => history.push('/thread/create')}>Create a thread</Button>\r\n\r\n                <div className=\"list\"> \r\n                    {threads.map((thread, index) => (\r\n                        <div className=\"list__item\" key={index}>\r\n                            <Link to={`/thread/${thread._id}`} className=\"list__link\"> {thread.title} </Link>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <Button variant=\"contained\" color=\"primary\" disabled={!hasMore} onClick={handleLoadMoreComments}>Load more threads</Button>\r\n            </main>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}